version: "2.1"

services:

  ###################################################
  # THIRD-PARTY SERVICES
  ###################################################

  chrome:
    image: edxops/chrome:${OPENEDX_IMAGE_VERSION}
    shm_size: 2g
    ports:
      - "${OPENEDX_CHROME_PORT}:${OPENEDX_CHROME_PORT}"
    volumes:  # for file uploads
      - ../edx-e2e-tests/upload_files:/edx/app/e2e/edx-e2e-tests/upload_files
      - ../edx-platform/common/test/data:/edx/app/edxapp/edx-platform/common/test/data

  devpi:
    image: edxops/devpi:${OPENEDX_IMAGE_VERSION}
    ports:
      - "${OPENEDX_DEVPI_PORT}:${OPENEDX_DEVPI_PORT}"
    volumes:
      - devpi_data:/data

  elasticsearch:
    image: edxops/elasticsearch:devstack
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_data:/usr/share/elasticsearch/logs

  firefox:
    image: edxops/firefox:${OPENEDX_IMAGE_VERSION}
    shm_size: 2g
    ports:
      - "${OPENEDX_FIREFOX_PORT}:${OPENEDX_FIREFOX_PORT}"
    volumes:  # for file uploads
      - ../edx-e2e-tests/upload_files:/edx/app/e2e/edx-e2e-tests/upload_files
      - ../edx-platform/common/test/data:/edx/app/edxapp/edx-platform/common/test/data

  memcached:
    image: memcached:1.4.24
    ports:
      - "${OPENEDX_MEMCACHED_PORT}:${OPENEDX_MEMCACHED_PORT}"

  mongo:
    # We use WiredTiger in all environments. In development environments we use
    # small files# to conserve disk space, and disable the journal for a minor
    # performance gain.
    # See https://docs.mongodb.com/v3.0/reference/program/mongod/#options
    # for complete details.
    command: mongod --smallfiles --nojournal --storageEngine wiredTiger
    image: mongo:3.2.16
    volumes:
      - mongo_data:/data/db
    ports:
      - "${OPENEDX_MONGO_PORT}:${OPENEDX_MONGO_PORT}"

  mysql:
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    image: mysql:5.6
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "${OPENEDX_MYSQL_PORT}:${OPENEDX_MYSQL_PORT}"

  redis:
    image: redis:2.8
    command: redis-server --requirepass password
    ports:
      - "${OPENEDX_REDIS_PORT}:${OPENEDX_REDIS_PORT}"

  ###################################################
  # EDX SERVICES
  ###################################################

  lms:
    extends:
      file: service-bases.yml
      service: _edxapp_service
    command: >
      bash -c 'source /edx/app/edxapp/edxapp_env && while true;
      do python /edx/app/edxapp/edx-platform/manage.py lms runserver
      0.0.0.0:${OPENEDX_LMS_PORT} --settings devstack_docker;
      sleep 2; done'
    depends_on:
      - mysql
      - mongo
      - memcached
      - discovery
    environment:
      BOK_CHOY_HOSTNAME: lms
      BOK_CHOY_LMS_PORT: 18003
      BOK_CHOY_CMS_PORT: 18031
      EDXAPP_TEST_MONGO_HOST: mongo
      NO_PYTHON_UNINSTALL: 1
    ports:
      - "${OPENEDX_LMS_PORT}:${OPENEDX_LMS_PORT}"
      - "19876:19876" # JS test debugging
    volumes:
      - edxapp_lms_assets:/edx/var/edxapp/staticfiles/

  studio:
    extends:
      file: service-bases.yml
      service: _edxapp_service
    command: >
      bash -c 'source /edx/app/edxapp/edxapp_env && while true;
      do python /edx/app/edxapp/edx-platform/manage.py cms
      runserver 0.0.0.0:${OPENEDX_STUDIO_PORT} --settings devstack_docker;
      sleep 2; done'
    depends_on:
      - mysql
      - memcached
      - mongo
    ports:
      - "${OPENEDX_STUDIO_PORT}:${OPENEDX_STUDIO_PORT}"
      - "19877:19877" # JS test debugging
    volumes:
      - edxapp_studio_assets:/edx/var/edxapp/staticfiles/

  discovery:
    extends:
      file: service-bases.yml
      service: _webservice
    command: >
      bash -c 'source /edx/app/discovery/discovery_env && while true;
      do python /edx/app/discovery/discovery/manage.py runserver
      0.0.0.0:${OPENEDX_DISCOVERY_PORT};
      sleep 2; done'
    depends_on:
      - mysql
      - elasticsearch
      - memcached
    environment:
      TEST_ELASTICSEARCH_URL: "http://elasticsearch:${OPENEDX_ELASTICSEARCH_PORT}"
      ENABLE_DJANGO_TOOLBAR: 1
    image: kdmccormick96/edx-discovery:${OPENEDX_IMAGE_VERSION}
    ports:
      - "${OPENEDX_DISCOVERY_PORT}:${OPENEDX_DISCOVERY_PORT}"
    volumes:
      - discovery_assets:/edx/var/discovery/

  registrar:
    extends:
      file: service-bases.yml
      service: _registrar_service
    command: >
      bash -c 'source /edx/app/registrar/registrar_env && while true;
      do python /edx/app/registrar/registrar/manage.py runserver
      0.0.0.0:${OPENEDX_REGISTRAR_PORT};
      sleep 2; done'
    depends_on:
      - mysql
      - lms
      - discovery
      - memcached
      - redis
      - registrar-worker
    ports:
      - "${OPENEDX_REGISTRAR_PORT}:${OPENEDX_REGISTRAR_PORT}"

  registrar-worker:
    extends:
      file: service-bases.yml
      service: _registrar_service
    command: >
      bash -c 'source /edx/app/registrar/registrar_env && while
      cd /edx/app/registrar/registrar && while true;
      celery -A registrar worker -l debug -c 2;
      sleep 2; done'
    depends_on:
      - mysql
      - lms
      - redis
    ports:
      - "${OPENEDX_REGISTRAR_WORKER_PORT}:${OPENEDX_REGISTRAR_WORKER_PORT}"

  ###################################################
  # EDX MICROFRONTENDS
  ###################################################

  program-manager:
    extends:
      file: service-bases.yml
      service: _microfrontend
    working_dir: '/edx/app/program-manager'
    ports:
      - "${OPENEDX_PROGRAM_MANAGER_PORT}:${OPENEDX_PROGRAM_MANAGER_PORT}"
    depends_on:
      - lms
      - registrar

volumes:
  discovery_assets:
  edxapp_lms_assets:
  edxapp_studio_assets:
  elasticsearch_data:
  mongo_data:
  mysql_data:
  devpi_data:
